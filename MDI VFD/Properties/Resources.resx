<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="dBName" xml:space="preserve">
    <value>ElectricalApps</value>
    <comment>Electrical database name</comment>
  </data>
  <data name="dBServer" xml:space="preserve">
    <value>ULSQL12T</value>
    <comment>Server for the SQL database connection </comment>
  </data>
  <data name="tblMachData" xml:space="preserve">
    <value>MACH_DATA</value>
    <comment>Table containing the list of Urschel cutting machines, their default motors, and default drives.</comment>
  </data>
  <data name="tblMtrData" xml:space="preserve">
    <value>MTR_DATA</value>
    <comment>Table containing the list of Urschel motors, their full nameplate specifications, and all their electrical properties such as FLA, power factor, and efficiency.</comment>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="V1000" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\V1000.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="tblChrtList" xml:space="preserve">
    <value>TMP_CHRT_LST</value>
    <comment>Table containing the master list of all VFD parameter chart part numbers for all machines and every single drive for each machine.</comment>
  </data>
  <data name="tblChrtV1000" xml:space="preserve">
    <value>TMP_CHRT_V1000</value>
    <comment>Table containing all the V1000 VFD parameter numbers and the actual Urschel VFD parameter chart values for each parameter.</comment>
  </data>
  <data name="tblDrvV1000Faults" xml:space="preserve">
    <value>DRV_V1000_FLT</value>
    <comment>Table containing all the fault parameter information for Yaskawa V1000 VFDs</comment>
  </data>
  <data name="tblDrvV1000Mons" xml:space="preserve">
    <value>DRV_V1000_MON</value>
    <comment>Table containing all the monitor parameter information for Yaskawa V1000 VFDs.</comment>
  </data>
  <data name="tblDrvV1000Params" xml:space="preserve">
    <value>DRV_V1000_PARAM</value>
    <comment>Table containing all the parameter number for Yaskawa V1000 drives, all the parameter properties, and the default setting based on drive part number.</comment>
  </data>
  <data name="tblMachDataGen" xml:space="preserve">
    <value>MACH_GEN_DATA</value>
    <comment>Table view of MACH_DATA that is stripped down just to Urschel cutting machine motor names, drive names, and default drive assignments</comment>
  </data>
  <data name="tblMachDataMtrDefs" xml:space="preserve">
    <value>MACH_MTR_DEFS</value>
    <comment>Table view of MACH_DATA that contains only the machine codes along with the default motor selections based on supply voltage and frequency.</comment>
  </data>
  <data name="tblMtrDataFLC" xml:space="preserve">
    <value>MTR_DATA_FLC</value>
    <comment>Table view of MTR_DATA that only has the FLC </comment>
  </data>
  <data name="tblVFDList" xml:space="preserve">
    <value>VFD_LST</value>
    <comment>Table containing all the VFDs used on Urschel machines</comment>
  </data>
  <data name="dBNameUL" xml:space="preserve">
    <value>PartInfo</value>
    <comment>Semi-official Urschel database for part information</comment>
  </data>
  <data name="tblPartInfo" xml:space="preserve">
    <value>NewPMst</value>
    <comment>Table containing all the general information for an Urschel part</comment>
  </data>
  <data name="tblDrvList" xml:space="preserve">
    <value>DRV_LIST</value>
    <comment>List of specific information on VFDs used in Urschel machines</comment>
  </data>
  <data name="tblVFDFamInf" xml:space="preserve">
    <value>VFD_FAM_INF</value>
    <comment>Table containing information regarding general information for each VFD family. Such as default parameter table, default group information tables, drive manufacturer, default parameter value columns.</comment>
  </data>
</root>